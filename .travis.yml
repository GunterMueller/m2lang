dist: xenial
language: cpp
sudo: false

matrix:
  include:
    - os: linux
      env: LLVM_VERSION=7.0.1
      compiler: gcc
    - os: linux
      env: LLVM_VERSION=7.0.1
      compiler: clang
    - os: osx
      osx_image: xcode9.4
      env: LLVM_VERSION=7.0.0
    - os: osx
      osx_image: xcode10.1
      env: LLVM_VERSION=7.0.0
    - os: windows
      env: LLVM_VERSION=7.0.1
  allow_failures:
    - os: windows

cache:
  directories:
    - llvm-7.0.1
    - llvm-7.0.0

addons:
  apt:
    packages:
    - ninja-build
  homebrew:
    packages:
    - ninja

before_install:
  # Should be part of addons
  -
    if [ "${TRAVIS_OS_NAME}" = "windows" ]; then
      choco install ninja python;
      export PATH="/c/Python37:/c/Python37/Scripts:$PATH";
    fi

install:
  -
    export LLVM_ROOT_DIR="$PWD/llvm-$LLVM_VERSION";
  -
    if  [ "${TRAVIS_OS_NAME}" = "windows" ]; then
      if [ ! -e "$LLVM_ROOT_DIR/bin/llvm-config.exe" ]; then
        wget -O llvm.7z https://github.com/ldc-developers/llvm/releases/download/ldc-v$LLVM_VERSION/llvm-$LLVM_VERSION-windows-x86-withAsserts-clang.7z;
        mkdir -p $LLVM_ROOT_DIR;
        7z x llvm.7z -o$LLVM_ROOT_DIR;
        rm llvm.7z;
      fi;
    else
      if [ ! -e "$LLVM_ROOT_DIR/bin/llvm-config" ]; then
        if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
          if [ "${LLVM_VERSION}" = "4.0.1" ]; then
            export LLVM_ARCH="x86_64-linux-gnu-debian8";
          else
            export LLVM_ARCH="x86_64-linux-gnu-ubuntu-14.04";
          fi;
        else
          export LLVM_ARCH="x86_64-apple-darwin";
        fi;
        wget -O llvm.tar.xz http://releases.llvm.org/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-${LLVM_ARCH}.tar.xz;
        mkdir -p $LLVM_ROOT_DIR;
        tar -xf llvm.tar.* --strip 1 -C $LLVM_ROOT_DIR;
        rm llvm.tar.*;
      fi;
    fi
  - export LLVM_CMAKE_DIR="$($LLVM_ROOT_DIR/bin/llvm-config --cmakedir)" ;
  - pip install --user lit
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then ld --version; fi
  - cmake --version
  - ninja --version
  - python --version
  - python -c "import lit; lit.main();" --version | head -n 1

script:
  # Invoke CMake to generate the Ninja build files.
  - cmake -G Ninja -DCMAKE_INSTALL_PREFIX=$LLVM_CMAKE_DIR .
  - ninja -j3
